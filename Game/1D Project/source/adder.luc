module adder (
    input alufn[6],
    input a[16],
    input b[16],
    output z,
    output v,
    output n,
    output out[16]
  ){
  
  sig s[16];
 
    always {
 
      case (alufn[3:0]){
       
      b0000:
        s = a + b;
      b0001:
        s = a - b;
      default:
        s = 0;

      b0011: //increment a
        s = a + 1;  
      b0111://decrement a
        s = a - 1;
  }
    z = (s[15:0] == 0);  //true when all output is zero
    v = (a[15] & (b[15] ^ alufn[0]) & !s[15]) | (!a[15] & !(b[15] ^ alufn[0]) & s[15]); // 1 for both negative and positive overflows
    n = s[15]; //true when S is negative ie s31 = 1 (signed)
    out = s[15:0];
 }
}

  

