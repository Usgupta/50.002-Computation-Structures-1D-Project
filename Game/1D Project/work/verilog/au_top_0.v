/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [3:0] io_sel,
    output reg [7:0] io_seg,
    output reg [7:0] io_seg2,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_edge_detector_slow_timer_out;
  reg [1-1:0] M_edge_detector_slow_timer_in;
  edge_detector_2 edge_detector_slow_timer (
    .clk(clk),
    .in(M_edge_detector_slow_timer_in),
    .out(M_edge_detector_slow_timer_out)
  );
  wire [1-1:0] M_start_button_out;
  reg [1-1:0] M_start_button_in;
  button_conditioner_3 start_button (
    .clk(clk),
    .in(M_start_button_in),
    .out(M_start_button_out)
  );
  wire [1-1:0] M_edge_start_button_out;
  reg [1-1:0] M_edge_start_button_in;
  edge_detector_2 edge_start_button (
    .clk(clk),
    .in(M_edge_start_button_in),
    .out(M_edge_start_button_out)
  );
  wire [1-1:0] M_slow_timer_value;
  counter_4 slow_timer (
    .clk(clk),
    .rst(rst),
    .value(M_slow_timer_value)
  );
  wire [32-1:0] M_random_num;
  reg [1-1:0] M_random_next;
  reg [32-1:0] M_random_seed;
  pn_gen_5 random (
    .clk(clk),
    .rst(rst),
    .next(M_random_next),
    .seed(M_random_seed),
    .num(M_random_num)
  );
  wire [6-1:0] M_game_fsm_alufn;
  wire [3-1:0] M_game_fsm_asel;
  wire [3-1:0] M_game_fsm_bsel;
  wire [2-1:0] M_game_fsm_wdsel;
  wire [4-1:0] M_game_fsm_regfile_wa;
  wire [4-1:0] M_game_fsm_regfile_ra;
  wire [4-1:0] M_game_fsm_regfile_rb;
  wire [1-1:0] M_game_fsm_we_regfile;
  wire [4-1:0] M_game_fsm_main_timer_sel;
  wire [8-1:0] M_game_fsm_main_timer_segs;
  wire [8-1:0] M_game_fsm_mini_timer_segs;
  reg [1-1:0] M_game_fsm_start_button;
  reg [1-1:0] M_game_fsm_dec;
  fsm_auto_6 game_fsm (
    .clk(clk),
    .rst(rst),
    .start_button(M_game_fsm_start_button),
    .dec(M_game_fsm_dec),
    .alufn(M_game_fsm_alufn),
    .asel(M_game_fsm_asel),
    .bsel(M_game_fsm_bsel),
    .wdsel(M_game_fsm_wdsel),
    .regfile_wa(M_game_fsm_regfile_wa),
    .regfile_ra(M_game_fsm_regfile_ra),
    .regfile_rb(M_game_fsm_regfile_rb),
    .we_regfile(M_game_fsm_we_regfile),
    .main_timer_sel(M_game_fsm_main_timer_sel),
    .main_timer_segs(M_game_fsm_main_timer_segs),
    .mini_timer_segs(M_game_fsm_mini_timer_segs)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    usb_tx = usb_rx;
    io_sel = 1'h0;
    io_seg = 1'h0;
    io_led = 24'h000000;
    M_random_seed = 128'h843233523a613966423b622562592c62;
    M_edge_detector_slow_timer_in = M_slow_timer_value;
    M_random_next = M_edge_detector_slow_timer_out;
    M_game_fsm_dec = M_edge_detector_slow_timer_out;
    M_start_button_in = ~io_dip[8+6+0-:1];
    M_edge_start_button_in = M_start_button_out;
    io_led[8+5+0-:1] = M_edge_start_button_out;
    M_game_fsm_start_button = M_edge_start_button_out;
    io_seg = M_game_fsm_main_timer_segs;
    io_sel = M_game_fsm_main_timer_sel;
    io_seg2 = M_game_fsm_mini_timer_segs;
  end
endmodule
