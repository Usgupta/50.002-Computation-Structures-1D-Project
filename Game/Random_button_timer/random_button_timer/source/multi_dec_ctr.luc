module multi_dec_ctr #(
    DIGITS = 2: DIGITS >= 2  // number of digits
  ) (
    input clk,                // clock
    input rst,                // reset
    input dec,                // decrement counter
    output digits[4][4]  // digit values
  ) {
 
  .clk(clk), .rst(rst) {
    decimal_counter dctr1 (#INIT(d0));// digit counters, initalize to 60
    decimal_counter dctr2 (#INIT(d6));
  }
 
always { 
       // decrement the first digit 
    digits[2] = 4b0; // output the values 
    digits[3] = 4b0; 
    digits[0] = dctr1.value; // output the values 
    digits[1] = dctr2.value; 
    // if the previous digit overflows, decrement the next 
     
    dctr1.dec = dec; 
    dctr2.dec = dctr1.ovf;  
 
     
    if(dctr2.value == 0 && dctr1.value == 0){ 
      dctr1.dec = 0; 
      dctr2.dec = 0; 
    }