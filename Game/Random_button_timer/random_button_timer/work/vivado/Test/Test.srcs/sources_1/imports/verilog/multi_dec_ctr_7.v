/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

/*
   Parameters:
     DIGITS = 2
*/
module multi_dec_ctr_7 (
    input clk,
    input rst,
    input dec,
    output reg [15:0] digits
  );
  
  localparam DIGITS = 2'h2;
  
  
  wire [1-1:0] M_dctr1_ovf;
  wire [4-1:0] M_dctr1_value;
  reg [1-1:0] M_dctr1_dec;
  decimal_counter_17 dctr1 (
    .clk(clk),
    .rst(rst),
    .dec(M_dctr1_dec),
    .ovf(M_dctr1_ovf),
    .value(M_dctr1_value)
  );
  wire [1-1:0] M_dctr2_ovf;
  wire [4-1:0] M_dctr2_value;
  reg [1-1:0] M_dctr2_dec;
  decimal_counter_18 dctr2 (
    .clk(clk),
    .rst(rst),
    .dec(M_dctr2_dec),
    .ovf(M_dctr2_ovf),
    .value(M_dctr2_value)
  );
  
  always @* begin
    digits[8+3-:4] = 4'h0;
    digits[12+3-:4] = 4'h0;
    digits[0+3-:4] = M_dctr1_value;
    digits[4+3-:4] = M_dctr2_value;
    M_dctr1_dec = dec;
    M_dctr2_dec = M_dctr1_ovf;
    if (M_dctr2_value == 1'h0 && M_dctr1_value == 1'h0) begin
      M_dctr1_dec = 1'h0;
      M_dctr2_dec = 1'h0;
    end
  end
endmodule
